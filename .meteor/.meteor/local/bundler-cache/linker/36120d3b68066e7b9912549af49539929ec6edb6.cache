[{"type":"js","data":"/* Imports for global scope */\n\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nTemplate = Package['templating-runtime'].Template;\nmeteorInstall = Package.modules.meteorInstall;\nBuffer = Package.modules.Buffer;\nprocess = Package.modules.process;\nSymbol = Package['ecmascript-runtime'].Symbol;\nMap = Package['ecmascript-runtime'].Map;\nSet = Package['ecmascript-runtime'].Set;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nAutoupdate = Package.autoupdate.Autoupdate;\nReload = Package.reload.Reload;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"imports\":{\"ui\":{\"body.html\":[\"./template.body.js\",function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                       //\n// imports/ui/body.html                                                                  //\n//                                                                                       //\n///////////////////////////////////////////////////////////////////////////////////////////\n                                                                                         //\nmodule.exports = require(\"./template.body.js\");                                          // 1\n                                                                                         // 2\n///////////////////////////////////////////////////////////////////////////////////////////\n\n}],\"template.body.js\":function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                       //\n// imports/ui/template.body.js                                                           //\n//                                                                                       //\n///////////////////////////////////////////////////////////////////////////////////////////\n                                                                                         //\n                                                                                         // 1\nTemplate.body.addContent((function() {                                                   // 2\n  var view = this;                                                                       // 3\n  return HTML.DIV({                                                                      // 4\n    class: \"container\"                                                                   // 5\n  }, HTML.Raw('\\n    <header>\\n      <h1>Inventory</h1>\\n\\n      <form class=\"new-item\">\\n        <input type=\"text\" name=\"text\" placeholder=\"Type to add new items\">\\n      </form>\\n    </header>\\n\\n    '), HTML.UL(\"\\n      \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"items\"));                                         // 7\n  }, function() {                                                                        // 8\n    return [ \"\\n        \", Spacebars.include(view.lookupTemplate(\"item\")), \"\\n      \" ];\n  }), \"\\n    \"), \"\\n  \");                                                                // 10\n}));                                                                                     // 11\nMeteor.startup(Template.body.renderToDocument);                                          // 12\n                                                                                         // 13\nTemplate.__checkName(\"item\");                                                            // 14\nTemplate[\"item\"] = new Template(\"Template.item\", (function() {                           // 15\n  var view = this;                                                                       // 16\n  return HTML.LI(Blaze.View(\"lookup:text\", function() {                                  // 17\n    return Spacebars.mustache(view.lookup(\"text\"));                                      // 18\n  }));                                                                                   // 19\n}));                                                                                     // 20\n                                                                                         // 21\n///////////////////////////////////////////////////////////////////////////////////////////\n\n},\"body.js\":[\"meteor/templating\",\"meteor/reactive-dict\",\"../api/items.js\",\"./body.html\",function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                       //\n// imports/ui/body.js                                                                    //\n//                                                                                       //\n///////////////////////////////////////////////////////////////////////////////////////////\n                                                                                         //\nvar Template = void 0;                                                                   // 1\nmodule.importSync(\"meteor/templating\", {                                                 // 1\n  Template: function (v) {                                                               // 1\n    Template = v;                                                                        // 1\n  }                                                                                      // 1\n}, 0);                                                                                   // 1\nvar ReactiveDict = void 0;                                                               // 1\nmodule.importSync(\"meteor/reactive-dict\", {                                              // 1\n  ReactiveDict: function (v) {                                                           // 1\n    ReactiveDict = v;                                                                    // 1\n  }                                                                                      // 1\n}, 1);                                                                                   // 1\nvar Items = void 0;                                                                      // 1\nmodule.importSync(\"../api/items.js\", {                                                   // 1\n  Items: function (v) {                                                                  // 1\n    Items = v;                                                                           // 1\n  }                                                                                      // 1\n}, 2);                                                                                   // 1\nmodule.importSync(\"./body.html\");                                                        // 1\nTemplate.body.onCreated(function () {                                                    // 8\n  function bodyOnCreated() {                                                             // 8\n    this.state = new ReactiveDict();                                                     // 9\n  }                                                                                      // 10\n                                                                                         //\n  return bodyOnCreated;                                                                  // 8\n}());                                                                                    // 8\nTemplate.body.helpers({                                                                  // 12\n  items: function () {                                                                   // 13\n    var instance = Template.instance();                                                  // 14\n                                                                                         //\n    if (instance.state.get('hideCompleted')) {                                           // 15\n      // If hide completed is checked, filter items                                      // 16\n      return Items.find({                                                                // 17\n        checked: {                                                                       // 17\n          $ne: true                                                                      // 17\n        }                                                                                // 17\n      }, {                                                                               // 17\n        sort: {                                                                          // 17\n          createdAt: -1                                                                  // 17\n        }                                                                                // 17\n      });                                                                                // 17\n    } // Show newest items at the top                                                    // 18\n                                                                                         //\n                                                                                         //\n    return Items.find({}, {                                                              // 20\n      sort: {                                                                            // 20\n        createdAt: -1                                                                    // 20\n      }                                                                                  // 20\n    });                                                                                  // 20\n  },                                                                                     // 21\n  incompleteCount: function () {                                                         // 22\n    return Items.find({                                                                  // 23\n      checked: {                                                                         // 23\n        $ne: true                                                                        // 23\n      }                                                                                  // 23\n    }).count();                                                                          // 23\n  }                                                                                      // 24\n});                                                                                      // 12\nTemplate.body.events({                                                                   // 27\n  'submit .new-item': function (event) {                                                 // 28\n    // Prevent default browser form submit                                               // 29\n    event.preventDefault(); // Get value from form element                               // 30\n                                                                                         //\n    var target = event.target;                                                           // 33\n    var text = target.text.value; // Insert an item into the collection                  // 34\n                                                                                         //\n    Items.insert({                                                                       // 37\n      text: text,                                                                        // 38\n      createdAt: new Date()                                                              // 39\n    }); // Clear form                                                                    // 37\n                                                                                         //\n    target.text.value = '';                                                              // 43\n  },                                                                                     // 44\n  'change .hide-completed input': function (event, instance) {                           // 45\n    instance.state.set('hideCompleted', event.target.checked);                           // 46\n  }                                                                                      // 47\n});                                                                                      // 27\n///////////////////////////////////////////////////////////////////////////////////////////\n\n}]},\"api\":{\"items.js\":[\"meteor/mongo\",function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                       //\n// imports/api/items.js                                                                  //\n//                                                                                       //\n///////////////////////////////////////////////////////////////////////////////////////////\n                                                                                         //\nmodule.export({                                                                          // 1\n  Items: function () {                                                                   // 1\n    return Items;                                                                        // 1\n  }                                                                                      // 1\n});                                                                                      // 1\nvar Mongo = void 0;                                                                      // 1\nmodule.importSync(\"meteor/mongo\", {                                                      // 1\n  Mongo: function (v) {                                                                  // 1\n    Mongo = v;                                                                           // 1\n  }                                                                                      // 1\n}, 0);                                                                                   // 1\nvar Items = new Mongo.Collection('items');                                               // 3\n///////////////////////////////////////////////////////////////////////////////////////////\n\n}]}},\"client\":{\"main.js\":[\"../imports/ui/body.js\",function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                       //\n// client/main.js                                                                        //\n//                                                                                       //\n///////////////////////////////////////////////////////////////////////////////////////////\n                                                                                         //\nmodule.importSync(\"../imports/ui/body.js\");                                              // 1\n///////////////////////////////////////////////////////////////////////////////////////////\n\n}]}},{\"extensions\":[\".js\",\".json\",\".html\",\".css\"]});\nrequire(\"./client/main.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["/imports/ui/body.js","/imports/api/items.js","/client/main.js"],"names":["Template","module","importSync","v","ReactiveDict","Items","body","onCreated","bodyOnCreated","state","helpers","items","instance","get","find","checked","$ne","sort","createdAt","incompleteCount","count","events","event","preventDefault","target","text","value","insert","Date","set","export","Mongo","Collection"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAIA,iBAAJ;AAAaC,OAAOC,UAAP,CAAkB,mBAAlB,EAAsC;AAACF,YAAS,UAASG,CAAT,EAAW;AAACH,eAASG,CAAT;AAAW;AAAjC,CAAtC,EAAyE,CAAzE;AAA4E,IAAIC,qBAAJ;AAAiBH,OAAOC,UAAP,CAAkB,sBAAlB,EAAyC;AAACE,gBAAa,UAASD,CAAT,EAAW;AAACC,mBAAaD,CAAb;AAAe;AAAzC,CAAzC,EAAoF,CAApF;AAAuF,IAAIE,cAAJ;AAAUJ,OAAOC,UAAP,CAAkB,iBAAlB,EAAoC;AAACG,SAAM,UAASF,CAAT,EAAW;AAACE,YAAMF,CAAN;AAAQ;AAA3B,CAApC,EAAiE,CAAjE;AAAoEF,OAAOC,UAAP,CAAkB,aAAlB;AAO/QF,SAASM,IAAT,CAAcC,SAAd;AAAwB,WAASC,aAAT,GAAyB;AAC/C,SAAKC,KAAL,GAAa,IAAIL,YAAJ,EAAb;AACD;;AAFD,SAAiCI,aAAjC;AAAA;AAIAR,SAASM,IAAT,CAAcI,OAAd,CAAsB;AACpBC,OADoB,cACZ;AACN,QAAMC,WAAWZ,SAASY,QAAT,EAAjB;;AACA,QAAIA,SAASH,KAAT,CAAeI,GAAf,CAAmB,eAAnB,CAAJ,EAAyC;AACvC;AACA,aAAOR,MAAMS,IAAN,CAAW;AAAEC,iBAAS;AAAEC,eAAK;AAAP;AAAX,OAAX,EAAuC;AAAEC,cAAM;AAAEC,qBAAW,CAAC;AAAd;AAAR,OAAvC,CAAP;AACD,KALK,CAMN;;;AACA,WAAOb,MAAMS,IAAN,CAAW,EAAX,EAAe;AAAEG,YAAM;AAAEC,mBAAW,CAAC;AAAd;AAAR,KAAf,CAAP;AACD,GATmB;AAUpBC,iBAVoB,cAUF;AAChB,WAAOd,MAAMS,IAAN,CAAW;AAAEC,eAAS;AAAEC,aAAK;AAAP;AAAX,KAAX,EAAuCI,KAAvC,EAAP;AACD;AAZmB,CAAtB;AAeApB,SAASM,IAAT,CAAce,MAAd,CAAqB;AACnB,oBADmB,YACAC,KADA,EACO;AACxB;AACAA,UAAMC,cAAN,GAFwB,CAIxB;;AACA,QAAMC,SAASF,MAAME,MAArB;AACA,QAAMC,OAAOD,OAAOC,IAAP,CAAYC,KAAzB,CANwB,CAQxB;;AACArB,UAAMsB,MAAN,CAAa;AACXF,gBADW;AAEXP,iBAAW,IAAIU,IAAJ;AAFA,KAAb,EATwB,CAcxB;;AACAJ,WAAOC,IAAP,CAAYC,KAAZ,GAAoB,EAApB;AACD,GAjBkB;AAkBnB,gCAlBmB,YAkBYJ,KAlBZ,EAkBmBV,QAlBnB,EAkB6B;AAC9CA,aAASH,KAAT,CAAeoB,GAAf,CAAmB,eAAnB,EAAoCP,MAAME,MAAN,CAAaT,OAAjD;AACD;AApBkB,CAArB,6F;;;;;;;;;;;AC1BAd,OAAO6B,MAAP,CAAc;AAACzB,SAAM;AAAA,WAAIA,KAAJ;AAAA;AAAP,CAAd;AAAiC,IAAI0B,cAAJ;AAAU9B,OAAOC,UAAP,CAAkB,cAAlB,EAAiC;AAAC6B,SAAM,UAAS5B,CAAT,EAAW;AAAC4B,YAAM5B,CAAN;AAAQ;AAA3B,CAAjC,EAA8D,CAA9D;AAEpC,IAAME,QAAQ,IAAI0B,MAAMC,UAAV,CAAqB,OAArB,CAAd,oD;;;;;;;;;;;ACFP/B,OAAOC,UAAP,CAAkB,uBAAlB,oD","file":"/app.js","sourcesContent":["import { Template } from 'meteor/templating';\nimport { ReactiveDict } from 'meteor/reactive-dict';\n\nimport { Items } from '../api/items.js';\n\nimport './body.html';\n\nTemplate.body.onCreated(function bodyOnCreated() {\n  this.state = new ReactiveDict();\n});\n\nTemplate.body.helpers({\n  items() {\n    const instance = Template.instance();\n    if (instance.state.get('hideCompleted')) {\n      // If hide completed is checked, filter items\n      return Items.find({ checked: { $ne: true } }, { sort: { createdAt: -1 } });\n    }\n    // Show newest items at the top\n    return Items.find({}, { sort: { createdAt: -1 } });\n  },\n  incompleteCount() {\n    return Items.find({ checked: { $ne: true } }).count();\n  },\n});\n\nTemplate.body.events({\n  'submit .new-item'(event) {\n    // Prevent default browser form submit\n    event.preventDefault();\n\n    // Get value from form element\n    const target = event.target;\n    const text = target.text.value;\n\n    // Insert an item into the collection\n    Items.insert({\n      text,\n      createdAt: new Date(), // current time\n    });\n\n    // Clear form\n    target.text.value = '';\n  },\n  'change .hide-completed input'(event, instance) {\n    instance.state.set('hideCompleted', event.target.checked);\n  },\n});\n","import { Mongo } from 'meteor/mongo';\n\nexport const Items = new Mongo.Collection('items');\n","import '../imports/ui/body.js';\n"]}}]