{"version":3,"sources":["meteor://ðŸ’»app/imports/ui/body.js","meteor://ðŸ’»app/imports/api/items.js","meteor://ðŸ’»app/imports/startup/accounts-config.js","meteor://ðŸ’»app/client/main.js"],"names":["Meteor","module","importSync","v","Template","ReactiveDict","Items","body","onCreated","bodyOnCreated","state","helpers","items","instance","get","find","checked","$ne","sort","createdAt","incompleteCount","count","events","event","preventDefault","target","text","value","insert","Date","owner","userId","username","user","set","export","Mongo","Collection","Accounts","ui","config","passwordSignupFields"],"mappings":"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","file":"/app.js","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Template } from 'meteor/templating';\nimport { ReactiveDict } from 'meteor/reactive-dict';\n\nimport { Items } from '../api/items.js';\n\n//import './item.js';\nimport './body.html';\n\nTemplate.body.onCreated(function bodyOnCreated() {\n  this.state = new ReactiveDict();\n});\n\nTemplate.body.helpers({\n  items() {\n    const instance = Template.instance();\n    if (instance.state.get('hideCompleted')) {\n      // If hide completed is checked, filter items\n      return Items.find({ checked: { $ne: true } }, { sort: { createdAt: -1 } });\n    }\n    // Show newest items at the top\n    return Items.find({}, { sort: { createdAt: -1 } });\n  },\n  incompleteCount() {\n    return Items.find({ checked: { $ne: true } }).count();\n  },\n});\n\nTemplate.body.events({\n  'submit .new-item'(event) {\n    // Prevent default browser form submit\n    event.preventDefault();\n\n    // Get value from form element\n    const target = event.target;\n    const text = target.text.value;\n\n    // Insert an item into the collection\n    Items.insert({\n      text,\n      createdAt: new Date(), // current time\n      owner: Meteor.userId(),\n      username: Meteor.user().username,\n    });\n\n    // Clear form\n    target.text.value = '';\n  },\n  'change .hide-completed input'(event, instance) {\n    instance.state.set('hideCompleted', event.target.checked);\n  },\n});\n","import { Mongo } from 'meteor/mongo';\n\nexport const Items = new Mongo.Collection('items');\n","import { Accounts } from 'meteor/accounts-base';\n\nAccounts.ui.config({\n  passwordSignupFields: 'USERNAME_ONLY',\n});\n","import '../imports/startup/accounts-config.js';\nimport '../imports/ui/body.js';\n"]}