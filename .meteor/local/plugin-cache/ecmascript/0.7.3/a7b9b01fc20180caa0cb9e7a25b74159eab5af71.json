{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"meteor/templating","imported":["Template"],"specifiers":[{"kind":"named","imported":"Template","local":"Template"}]},{"source":"meteor/reactive-dict","imported":["ReactiveDict"],"specifiers":[{"kind":"named","imported":"ReactiveDict","local":"ReactiveDict"}]},{"source":"../api/items.js","imported":["Items"],"specifiers":[{"kind":"named","imported":"Items","local":"Items"}]},{"source":"./item.js","imported":[],"specifiers":[]},{"source":"./body.html","imported":[],"specifiers":[]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/ui/body.js","filenameRelative":"/imports/ui/body.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/ui/body.js.map","sourceFileName":"/imports/ui/body.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"body"},"ignored":false,"code":"var Meteor = void 0;\nmodule.importSync(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar Template = void 0;\nmodule.importSync(\"meteor/templating\", {\n  Template: function (v) {\n    Template = v;\n  }\n}, 1);\nvar ReactiveDict = void 0;\nmodule.importSync(\"meteor/reactive-dict\", {\n  ReactiveDict: function (v) {\n    ReactiveDict = v;\n  }\n}, 2);\nvar Items = void 0;\nmodule.importSync(\"../api/items.js\", {\n  Items: function (v) {\n    Items = v;\n  }\n}, 3);\nmodule.importSync(\"./item.js\");\nmodule.importSync(\"./body.html\");\nTemplate.body.onCreated(function () {\n  function bodyOnCreated() {\n    this.state = new ReactiveDict();\n  }\n\n  return bodyOnCreated;\n}());\nTemplate.body.helpers({\n  items: function () {\n    var instance = Template.instance();\n\n    if (instance.state.get('hideCompleted')) {\n      // If hide completed is checked, filter items\n      return Items.find({\n        checked: {\n          $ne: true\n        }\n      }, {\n        sort: {\n          createdAt: -1\n        }\n      });\n    } // Show newest items at the top\n\n\n    return Items.find({}, {\n      sort: {\n        createdAt: -1\n      }\n    });\n  },\n  incompleteCount: function () {\n    return Items.find({\n      checked: {\n        $ne: true\n      }\n    }).count();\n  }\n});\nTemplate.body.events({\n  'submit .new-item': function (event) {\n    // Prevent default browser form submit\n    event.preventDefault(); // Get value from form element\n\n    var target = event.target;\n    var text = target.text.value; // Insert an item into the collection\n\n    Items.insert({\n      text: text,\n      createdAt: new Date()\n    }); // Clear form\n\n    target.text.value = '';\n  },\n  'change .hide-completed input': function (event, instance) {\n    instance.state.set('hideCompleted', event.target.checked);\n  }\n});","map":{"version":3,"sources":["/imports/ui/body.js"],"names":["Meteor","module","importSync","v","Template","ReactiveDict","Items","body","onCreated","bodyOnCreated","state","helpers","items","instance","get","find","checked","$ne","sort","createdAt","incompleteCount","count","events","event","preventDefault","target","text","value","insert","Date","set"],"mappings":"AAAA,IAAIA,eAAJ;AAAWC,OAAOC,UAAP,CAAkB,eAAlB,EAAkC;AAACF,UAAO,UAASG,CAAT,EAAW;AAACH,aAAOG,CAAP;AAAS;AAA7B,CAAlC,EAAiE,CAAjE;AAAoE,IAAIC,iBAAJ;AAAaH,OAAOC,UAAP,CAAkB,mBAAlB,EAAsC;AAACE,YAAS,UAASD,CAAT,EAAW;AAACC,eAASD,CAAT;AAAW;AAAjC,CAAtC,EAAyE,CAAzE;AAA4E,IAAIE,qBAAJ;AAAiBJ,OAAOC,UAAP,CAAkB,sBAAlB,EAAyC;AAACG,gBAAa,UAASF,CAAT,EAAW;AAACE,mBAAaF,CAAb;AAAe;AAAzC,CAAzC,EAAoF,CAApF;AAAuF,IAAIG,cAAJ;AAAUL,OAAOC,UAAP,CAAkB,iBAAlB,EAAoC;AAACI,SAAM,UAASH,CAAT,EAAW;AAACG,YAAMH,CAAN;AAAQ;AAA3B,CAApC,EAAiE,CAAjE;AAAoEF,OAAOC,UAAP,CAAkB,WAAlB;AAA+BD,OAAOC,UAAP,CAAkB,aAAlB;AAS7XE,SAASG,IAAT,CAAcC,SAAd;AAAwB,WAASC,aAAT,GAAyB;AAC/C,SAAKC,KAAL,GAAa,IAAIL,YAAJ,EAAb;AACD;;AAFD,SAAiCI,aAAjC;AAAA;AAIAL,SAASG,IAAT,CAAcI,OAAd,CAAsB;AACpBC,OADoB,cACZ;AACN,QAAMC,WAAWT,SAASS,QAAT,EAAjB;;AACA,QAAIA,SAASH,KAAT,CAAeI,GAAf,CAAmB,eAAnB,CAAJ,EAAyC;AACvC;AACA,aAAOR,MAAMS,IAAN,CAAW;AAAEC,iBAAS;AAAEC,eAAK;AAAP;AAAX,OAAX,EAAuC;AAAEC,cAAM;AAAEC,qBAAW,CAAC;AAAd;AAAR,OAAvC,CAAP;AACD,KALK,CAMN;;;AACA,WAAOb,MAAMS,IAAN,CAAW,EAAX,EAAe;AAAEG,YAAM;AAAEC,mBAAW,CAAC;AAAd;AAAR,KAAf,CAAP;AACD,GATmB;AAUpBC,iBAVoB,cAUF;AAChB,WAAOd,MAAMS,IAAN,CAAW;AAAEC,eAAS;AAAEC,aAAK;AAAP;AAAX,KAAX,EAAuCI,KAAvC,EAAP;AACD;AAZmB,CAAtB;AAeAjB,SAASG,IAAT,CAAce,MAAd,CAAqB;AACnB,oBADmB,YACAC,KADA,EACO;AACxB;AACAA,UAAMC,cAAN,GAFwB,CAIxB;;AACA,QAAMC,SAASF,MAAME,MAArB;AACA,QAAMC,OAAOD,OAAOC,IAAP,CAAYC,KAAzB,CANwB,CAQxB;;AACArB,UAAMsB,MAAN,CAAa;AACXF,gBADW;AAEXP,iBAAW,IAAIU,IAAJ;AAFA,KAAb,EATwB,CAcxB;;AACAJ,WAAOC,IAAP,CAAYC,KAAZ,GAAoB,EAApB;AACD,GAjBkB;AAkBnB,gCAlBmB,YAkBYJ,KAlBZ,EAkBmBV,QAlBnB,EAkB6B;AAC9CA,aAASH,KAAT,CAAeoB,GAAf,CAAmB,eAAnB,EAAoCP,MAAME,MAAN,CAAaT,OAAjD;AACD;AApBkB,CAArB","file":"/imports/ui/body.js.map","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Template } from 'meteor/templating';\nimport { ReactiveDict } from 'meteor/reactive-dict';\n\nimport { Items } from '../api/items.js';\n\nimport './item.js';\nimport './body.html';\n\nTemplate.body.onCreated(function bodyOnCreated() {\n  this.state = new ReactiveDict();\n});\n\nTemplate.body.helpers({\n  items() {\n    const instance = Template.instance();\n    if (instance.state.get('hideCompleted')) {\n      // If hide completed is checked, filter items\n      return Items.find({ checked: { $ne: true } }, { sort: { createdAt: -1 } });\n    }\n    // Show newest items at the top\n    return Items.find({}, { sort: { createdAt: -1 } });\n  },\n  incompleteCount() {\n    return Items.find({ checked: { $ne: true } }).count();\n  },\n});\n\nTemplate.body.events({\n  'submit .new-item'(event) {\n    // Prevent default browser form submit\n    event.preventDefault();\n\n    // Get value from form element\n    const target = event.target;\n    const text = target.text.value;\n\n    // Insert an item into the collection\n    Items.insert({\n      text,\n      createdAt: new Date(), // current time\n    });\n\n    // Clear form\n    target.text.value = '';\n  },\n  'change .hide-completed input'(event, instance) {\n    instance.state.set('hideCompleted', event.target.checked);\n  },\n});\n"]},"hash":"a7b9b01fc20180caa0cb9e7a25b74159eab5af71"}
