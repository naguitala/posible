[{"type":"js","data":"/* Imports for global scope */\n\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nTemplate = Package['templating-runtime'].Template;\nmeteorInstall = Package.modules.meteorInstall;\nBuffer = Package.modules.Buffer;\nprocess = Package.modules.process;\nSymbol = Package['ecmascript-runtime'].Symbol;\nMap = Package['ecmascript-runtime'].Map;\nSet = Package['ecmascript-runtime'].Set;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nAutoupdate = Package.autoupdate.Autoupdate;\nReload = Package.reload.Reload;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"imports\":{\"ui\":{\"body.html\":[\"./template.body.js\",function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                              //\n// imports/ui/body.html                                                                                         //\n//                                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                //\nmodule.exports = require(\"./template.body.js\");                                                                 // 1\n                                                                                                                // 2\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}],\"template.body.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                              //\n// imports/ui/template.body.js                                                                                  //\n//                                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                //\n                                                                                                                // 1\nTemplate.body.addContent((function() {                                                                          // 2\n  var view = this;                                                                                              // 3\n  return HTML.DIV({                                                                                             // 4\n    class: \"container\"                                                                                          // 5\n  }, \"\\n    \", HTML.HEADER(\"\\n      \", HTML.H1(\"Inventory (\", Blaze.View(\"lookup:incompleteCount\", function() {\n    return Spacebars.mustache(view.lookup(\"incompleteCount\"));                                                  // 7\n  }), \")\"), \"\\n\\n      \", HTML.Raw('<label class=\"hide-completed\">\\n        <input type=\"checkbox\">\\n        Hide Completed Items\\n      </label>'), \"\\n\\n      \", HTML.Raw('<form class=\"new-item\">\\n        <input type=\"text\" name=\"text\" placeholder=\"Type to add new items\">\\n      </form>'), \"\\n    \"), \"\\n\\n    \", HTML.UL(\"\\n      \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"items\"));                                                                // 9\n  }, function() {                                                                                               // 10\n    return [ \"\\n        \", Spacebars.include(view.lookupTemplate(\"item\")), \"\\n      \" ];                        // 11\n  }), \"\\n    \"), \"\\n  \");                                                                                       // 12\n}));                                                                                                            // 13\nMeteor.startup(Template.body.renderToDocument);                                                                 // 14\n                                                                                                                // 15\nTemplate.__checkName(\"item\");                                                                                   // 16\nTemplate[\"item\"] = new Template(\"Template.item\", (function() {                                                  // 17\n  var view = this;                                                                                              // 18\n  return HTML.LI(Blaze.View(\"lookup:text\", function() {                                                         // 19\n    return Spacebars.mustache(view.lookup(\"text\"));                                                             // 20\n  }));                                                                                                          // 21\n}));                                                                                                            // 22\n                                                                                                                // 23\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"item.html\":[\"./template.item.js\",function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                              //\n// imports/ui/item.html                                                                                         //\n//                                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                //\nmodule.exports = require(\"./template.item.js\");                                                                 // 1\n                                                                                                                // 2\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}],\"template.item.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                              //\n// imports/ui/template.item.js                                                                                  //\n//                                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                //\n                                                                                                                // 1\nTemplate.__checkName(\"item\");                                                                                   // 2\nTemplate[\"item\"] = new Template(\"Template.item\", (function() {                                                  // 3\n  var view = this;                                                                                              // 4\n  return HTML.LI({                                                                                              // 5\n    class: function() {                                                                                         // 6\n      return Blaze.If(function() {                                                                              // 7\n        return Spacebars.call(view.lookup(\"checked\"));                                                          // 8\n      }, function() {                                                                                           // 9\n        return \"checked\";                                                                                       // 10\n      });                                                                                                       // 11\n    }                                                                                                           // 12\n  }, HTML.Raw('\\n    <button class=\"delete\">&times;</button>\\n\\n    '), HTML.INPUT({                            // 13\n    type: \"checkbox\",                                                                                           // 14\n    checked: function() {                                                                                       // 15\n      return Spacebars.mustache(view.lookup(\"checked\"));                                                        // 16\n    },                                                                                                          // 17\n    class: \"toggle-checked\"                                                                                     // 18\n  }), \"\\n\\n    \", HTML.SPAN({                                                                                   // 19\n    class: \"text\"                                                                                               // 20\n  }, Blaze.View(\"lookup:text\", function() {                                                                     // 21\n    return Spacebars.mustache(view.lookup(\"text\"));                                                             // 22\n  })), \"\\n  \");                                                                                                 // 23\n}));                                                                                                            // 24\n                                                                                                                // 25\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"body.js\":[\"meteor/templating\",\"meteor/reactive-dict\",\"../api/items.js\",\"./item.js\",\"./body.html\",function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                              //\n// imports/ui/body.js                                                                                           //\n//                                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                //\nvar Template = void 0;                                                                                          // 1\nmodule.importSync(\"meteor/templating\", {                                                                        // 1\n  Template: function (v) {                                                                                      // 1\n    Template = v;                                                                                               // 1\n  }                                                                                                             // 1\n}, 0);                                                                                                          // 1\nvar ReactiveDict = void 0;                                                                                      // 1\nmodule.importSync(\"meteor/reactive-dict\", {                                                                     // 1\n  ReactiveDict: function (v) {                                                                                  // 1\n    ReactiveDict = v;                                                                                           // 1\n  }                                                                                                             // 1\n}, 1);                                                                                                          // 1\nvar Items = void 0;                                                                                             // 1\nmodule.importSync(\"../api/items.js\", {                                                                          // 1\n  Items: function (v) {                                                                                         // 1\n    Items = v;                                                                                                  // 1\n  }                                                                                                             // 1\n}, 2);                                                                                                          // 1\nmodule.importSync(\"./item.js\");                                                                                 // 1\nmodule.importSync(\"./body.html\");                                                                               // 1\nTemplate.body.onCreated(function () {                                                                           // 9\n  function bodyOnCreated() {                                                                                    // 9\n    this.state = new ReactiveDict();                                                                            // 10\n  }                                                                                                             // 11\n                                                                                                                //\n  return bodyOnCreated;                                                                                         // 9\n}());                                                                                                           // 9\nTemplate.body.helpers({                                                                                         // 13\n  items: function () {                                                                                          // 14\n    var instance = Template.instance();                                                                         // 15\n                                                                                                                //\n    if (instance.state.get('hideCompleted')) {                                                                  // 16\n      // If hide completed is checked, filter items                                                             // 17\n      return Items.find({                                                                                       // 18\n        checked: {                                                                                              // 18\n          $ne: true                                                                                             // 18\n        }                                                                                                       // 18\n      }, {                                                                                                      // 18\n        sort: {                                                                                                 // 18\n          createdAt: -1                                                                                         // 18\n        }                                                                                                       // 18\n      });                                                                                                       // 18\n    } // Show newest items at the top                                                                           // 19\n                                                                                                                //\n                                                                                                                //\n    return Items.find({}, {                                                                                     // 21\n      sort: {                                                                                                   // 21\n        createdAt: -1                                                                                           // 21\n      }                                                                                                         // 21\n    });                                                                                                         // 21\n  },                                                                                                            // 22\n  incompleteCount: function () {                                                                                // 23\n    return Items.find({                                                                                         // 24\n      checked: {                                                                                                // 24\n        $ne: true                                                                                               // 24\n      }                                                                                                         // 24\n    }).count();                                                                                                 // 24\n  }                                                                                                             // 25\n});                                                                                                             // 13\nTemplate.body.events({                                                                                          // 28\n  'submit .new-item': function (event) {                                                                        // 29\n    // Prevent default browser form submit                                                                      // 30\n    event.preventDefault(); // Get value from form element                                                      // 31\n                                                                                                                //\n    var target = event.target;                                                                                  // 34\n    var text = target.text.value; // Insert an item into the collection                                         // 35\n                                                                                                                //\n    Items.insert({                                                                                              // 38\n      text: text,                                                                                               // 39\n      createdAt: new Date()                                                                                     // 40\n    }); // Clear form                                                                                           // 38\n                                                                                                                //\n    target.text.value = '';                                                                                     // 44\n  },                                                                                                            // 45\n  'change .hide-completed input': function (event, instance) {                                                  // 46\n    instance.state.set('hideCompleted', event.target.checked);                                                  // 47\n  }                                                                                                             // 48\n});                                                                                                             // 28\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}],\"item.js\":[\"meteor/templating\",\"../api/items.js\",\"./item.html\",function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                              //\n// imports/ui/item.js                                                                                           //\n//                                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                //\nvar Template = void 0;                                                                                          // 1\nmodule.importSync(\"meteor/templating\", {                                                                        // 1\n  Template: function (v) {                                                                                      // 1\n    Template = v;                                                                                               // 1\n  }                                                                                                             // 1\n}, 0);                                                                                                          // 1\nvar Items = void 0;                                                                                             // 1\nmodule.importSync(\"../api/items.js\", {                                                                          // 1\n  Items: function (v) {                                                                                         // 1\n    Items = v;                                                                                                  // 1\n  }                                                                                                             // 1\n}, 1);                                                                                                          // 1\nmodule.importSync(\"./item.html\");                                                                               // 1\nTemplate.item.events({                                                                                          // 7\n  'click .toggle-checked': function () {                                                                        // 8\n    // Set the checked property to the opposite of its current value                                            // 9\n    Items.update(this._id, {                                                                                    // 10\n      $set: {                                                                                                   // 11\n        checked: !this.checked                                                                                  // 11\n      }                                                                                                         // 11\n    });                                                                                                         // 10\n  },                                                                                                            // 13\n  'click .delete': function () {                                                                                // 14\n    Items.remove(this._id);                                                                                     // 15\n  }                                                                                                             // 16\n});                                                                                                             // 7\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}]},\"api\":{\"items.js\":[\"meteor/mongo\",function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                              //\n// imports/api/items.js                                                                                         //\n//                                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                //\nmodule.export({                                                                                                 // 1\n  Items: function () {                                                                                          // 1\n    return Items;                                                                                               // 1\n  }                                                                                                             // 1\n});                                                                                                             // 1\nvar Mongo = void 0;                                                                                             // 1\nmodule.importSync(\"meteor/mongo\", {                                                                             // 1\n  Mongo: function (v) {                                                                                         // 1\n    Mongo = v;                                                                                                  // 1\n  }                                                                                                             // 1\n}, 0);                                                                                                          // 1\nvar Items = new Mongo.Collection('items');                                                                      // 3\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}]}},\"client\":{\"main.js\":[\"../imports/ui/body.js\",function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                              //\n// client/main.js                                                                                               //\n//                                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                //\nmodule.importSync(\"../imports/ui/body.js\");                                                                     // 1\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}]}},{\"extensions\":[\".js\",\".json\",\".html\",\".css\"]});\nrequire(\"./client/main.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["/imports/ui/body.js","/imports/ui/item.js","/imports/api/items.js","/client/main.js"],"names":["Template","module","importSync","v","ReactiveDict","Items","body","onCreated","bodyOnCreated","state","helpers","items","instance","get","find","checked","$ne","sort","createdAt","incompleteCount","count","events","event","preventDefault","target","text","value","insert","Date","set","item","update","_id","$set","remove","export","Mongo","Collection"],"mappings":"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","file":"/app.js","sourcesContent":["import { Template } from 'meteor/templating';\nimport { ReactiveDict } from 'meteor/reactive-dict';\n\nimport { Items } from '../api/items.js';\n\nimport './item.js';\nimport './body.html';\n\nTemplate.body.onCreated(function bodyOnCreated() {\n  this.state = new ReactiveDict();\n});\n\nTemplate.body.helpers({\n  items() {\n    const instance = Template.instance();\n    if (instance.state.get('hideCompleted')) {\n      // If hide completed is checked, filter items\n      return Items.find({ checked: { $ne: true } }, { sort: { createdAt: -1 } });\n    }\n    // Show newest items at the top\n    return Items.find({}, { sort: { createdAt: -1 } });\n  },\n  incompleteCount() {\n    return Items.find({ checked: { $ne: true } }).count();\n  },\n});\n\nTemplate.body.events({\n  'submit .new-item'(event) {\n    // Prevent default browser form submit\n    event.preventDefault();\n\n    // Get value from form element\n    const target = event.target;\n    const text = target.text.value;\n\n    // Insert an item into the collection\n    Items.insert({\n      text,\n      createdAt: new Date(), // current time\n    });\n\n    // Clear form\n    target.text.value = '';\n  },\n  'change .hide-completed input'(event, instance) {\n    instance.state.set('hideCompleted', event.target.checked);\n  },\n});\n","import { Template } from 'meteor/templating';\n\nimport { Items } from '../api/items.js';\n\nimport './item.html';\n\nTemplate.item.events({\n  'click .toggle-checked'() {\n    // Set the checked property to the opposite of its current value\n    Items.update(this._id, {\n      $set: { checked: ! this.checked },\n    });\n  },\n  'click .delete'() {\n    Items.remove(this._id);\n  },\n});\n","import { Mongo } from 'meteor/mongo';\n\nexport const Items = new Mongo.Collection('items');\n","import '../imports/ui/body.js';\n"]}}]