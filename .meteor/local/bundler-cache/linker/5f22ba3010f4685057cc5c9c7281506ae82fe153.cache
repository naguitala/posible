[{"type":"js","data":"/* Imports for global scope */\n\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nTemplate = Package['templating-runtime'].Template;\nmeteorInstall = Package.modules.meteorInstall;\nBuffer = Package.modules.Buffer;\nprocess = Package.modules.process;\nSymbol = Package['ecmascript-runtime'].Symbol;\nMap = Package['ecmascript-runtime'].Map;\nSet = Package['ecmascript-runtime'].Set;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nAccounts = Package['accounts-base'].Accounts;\nAutoupdate = Package.autoupdate.Autoupdate;\nReload = Package.reload.Reload;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"imports\":{\"ui\":{\"body.html\":[\"./template.body.js\",function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                              //\n// imports/ui/body.html                                                                                         //\n//                                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                //\nmodule.exports = require(\"./template.body.js\");                                                                 // 1\n                                                                                                                // 2\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}],\"template.body.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                              //\n// imports/ui/template.body.js                                                                                  //\n//                                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                //\n                                                                                                                // 1\nTemplate.body.addContent((function() {                                                                          // 2\n  var view = this;                                                                                              // 3\n  return HTML.DIV({                                                                                             // 4\n    class: \"container\"                                                                                          // 5\n  }, \"\\n    \", HTML.HEADER(\"\\n      \", HTML.H1(\"Inventory (\", Blaze.View(\"lookup:incompleteCount\", function() {\n    return Spacebars.mustache(view.lookup(\"incompleteCount\"));                                                  // 7\n  }), \")\"), \"\\n\\n      \", HTML.Raw('<label class=\"hide-completed\">\\n        <input type=\"checkbox\">\\n        Hide Completed Items\\n      </label>'), \"\\n\\n      \", Spacebars.include(view.lookupTemplate(\"loginButtons\")), \"\\n\\n      \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"currentUser\"));                                                          // 9\n  }, function() {                                                                                               // 10\n    return [ \"\\n        \", HTML.FORM({                                                                          // 11\n      class: \"new-item\"                                                                                         // 12\n    }, \"\\n          \", HTML.INPUT({                                                                             // 13\n      type: \"text\",                                                                                             // 14\n      name: \"text\",                                                                                             // 15\n      placeholder: \"Type to add new items\"                                                                      // 16\n    }), \"\\n        \"), \"\\n      \" ];                                                                            // 17\n  }), \"\\n    \"), \"\\n\\n    \", HTML.UL(\"\\n      \", Blaze.Each(function() {                                        // 18\n    return Spacebars.call(view.lookup(\"items\"));                                                                // 19\n  }, function() {                                                                                               // 20\n    return [ \"\\n        \", Spacebars.include(view.lookupTemplate(\"item\")), \"\\n      \" ];                        // 21\n  }), \"\\n    \"), \"\\n  \");                                                                                       // 22\n}));                                                                                                            // 23\nMeteor.startup(Template.body.renderToDocument);                                                                 // 24\n                                                                                                                // 25\nTemplate.__checkName(\"item\");                                                                                   // 26\nTemplate[\"item\"] = new Template(\"Template.item\", (function() {                                                  // 27\n  var view = this;                                                                                              // 28\n  return HTML.LI(Blaze.View(\"lookup:text\", function() {                                                         // 29\n    return Spacebars.mustache(view.lookup(\"text\"));                                                             // 30\n  }));                                                                                                          // 31\n}));                                                                                                            // 32\n                                                                                                                // 33\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"body.js\":[\"meteor/meteor\",\"meteor/templating\",\"meteor/reactive-dict\",\"../api/items.js\",\"./body.html\",function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                              //\n// imports/ui/body.js                                                                                           //\n//                                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                //\nvar Meteor = void 0;                                                                                            // 1\nmodule.importSync(\"meteor/meteor\", {                                                                            // 1\n  Meteor: function (v) {                                                                                        // 1\n    Meteor = v;                                                                                                 // 1\n  }                                                                                                             // 1\n}, 0);                                                                                                          // 1\nvar Template = void 0;                                                                                          // 1\nmodule.importSync(\"meteor/templating\", {                                                                        // 1\n  Template: function (v) {                                                                                      // 1\n    Template = v;                                                                                               // 1\n  }                                                                                                             // 1\n}, 1);                                                                                                          // 1\nvar ReactiveDict = void 0;                                                                                      // 1\nmodule.importSync(\"meteor/reactive-dict\", {                                                                     // 1\n  ReactiveDict: function (v) {                                                                                  // 1\n    ReactiveDict = v;                                                                                           // 1\n  }                                                                                                             // 1\n}, 2);                                                                                                          // 1\nvar Items = void 0;                                                                                             // 1\nmodule.importSync(\"../api/items.js\", {                                                                          // 1\n  Items: function (v) {                                                                                         // 1\n    Items = v;                                                                                                  // 1\n  }                                                                                                             // 1\n}, 3);                                                                                                          // 1\nmodule.importSync(\"./body.html\");                                                                               // 1\nTemplate.body.onCreated(function () {                                                                           // 10\n  function bodyOnCreated() {                                                                                    // 10\n    this.state = new ReactiveDict();                                                                            // 11\n  }                                                                                                             // 12\n                                                                                                                //\n  return bodyOnCreated;                                                                                         // 10\n}());                                                                                                           // 10\nTemplate.body.helpers({                                                                                         // 14\n  items: function () {                                                                                          // 15\n    var instance = Template.instance();                                                                         // 16\n                                                                                                                //\n    if (instance.state.get('hideCompleted')) {                                                                  // 17\n      // If hide completed is checked, filter items                                                             // 18\n      return Items.find({                                                                                       // 19\n        checked: {                                                                                              // 19\n          $ne: true                                                                                             // 19\n        }                                                                                                       // 19\n      }, {                                                                                                      // 19\n        sort: {                                                                                                 // 19\n          createdAt: -1                                                                                         // 19\n        }                                                                                                       // 19\n      });                                                                                                       // 19\n    } // Show newest items at the top                                                                           // 20\n                                                                                                                //\n                                                                                                                //\n    return Items.find({}, {                                                                                     // 22\n      sort: {                                                                                                   // 22\n        createdAt: -1                                                                                           // 22\n      }                                                                                                         // 22\n    });                                                                                                         // 22\n  },                                                                                                            // 23\n  incompleteCount: function () {                                                                                // 24\n    return Items.find({                                                                                         // 25\n      checked: {                                                                                                // 25\n        $ne: true                                                                                               // 25\n      }                                                                                                         // 25\n    }).count();                                                                                                 // 25\n  }                                                                                                             // 26\n});                                                                                                             // 14\nTemplate.body.events({                                                                                          // 29\n  'submit .new-item': function (event) {                                                                        // 30\n    // Prevent default browser form submit                                                                      // 31\n    event.preventDefault(); // Get value from form element                                                      // 32\n                                                                                                                //\n    var target = event.target;                                                                                  // 35\n    var text = target.text.value; // Insert an item into the collection                                         // 36\n                                                                                                                //\n    Items.insert({                                                                                              // 39\n      text: text,                                                                                               // 40\n      createdAt: new Date(),                                                                                    // 41\n      // current time                                                                                           // 41\n      owner: Meteor.userId(),                                                                                   // 42\n      username: Meteor.user().username                                                                          // 43\n    }); // Clear form                                                                                           // 39\n                                                                                                                //\n    target.text.value = '';                                                                                     // 47\n  },                                                                                                            // 48\n  'change .hide-completed input': function (event, instance) {                                                  // 49\n    instance.state.set('hideCompleted', event.target.checked);                                                  // 50\n  }                                                                                                             // 51\n});                                                                                                             // 29\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}]},\"api\":{\"items.js\":[\"meteor/mongo\",function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                              //\n// imports/api/items.js                                                                                         //\n//                                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                //\nmodule.export({                                                                                                 // 1\n  Items: function () {                                                                                          // 1\n    return Items;                                                                                               // 1\n  }                                                                                                             // 1\n});                                                                                                             // 1\nvar Mongo = void 0;                                                                                             // 1\nmodule.importSync(\"meteor/mongo\", {                                                                             // 1\n  Mongo: function (v) {                                                                                         // 1\n    Mongo = v;                                                                                                  // 1\n  }                                                                                                             // 1\n}, 0);                                                                                                          // 1\nvar Items = new Mongo.Collection('items');                                                                      // 3\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}]},\"startup\":{\"accounts-config.js\":[\"meteor/accounts-base\",function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                              //\n// imports/startup/accounts-config.js                                                                           //\n//                                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                //\nvar Accounts = void 0;                                                                                          // 1\nmodule.importSync(\"meteor/accounts-base\", {                                                                     // 1\n  Accounts: function (v) {                                                                                      // 1\n    Accounts = v;                                                                                               // 1\n  }                                                                                                             // 1\n}, 0);                                                                                                          // 1\nAccounts.ui.config({                                                                                            // 3\n  passwordSignupFields: 'USERNAME_ONLY'                                                                         // 4\n});                                                                                                             // 3\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}]}},\"client\":{\"main.js\":[\"../imports/startup/accounts-config.js\",\"../imports/ui/body.js\",function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                              //\n// client/main.js                                                                                               //\n//                                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                //\nmodule.importSync(\"../imports/startup/accounts-config.js\");                                                     // 1\nmodule.importSync(\"../imports/ui/body.js\");                                                                     // 1\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}]}},{\"extensions\":[\".js\",\".json\",\".html\",\".css\"]});\nrequire(\"./client/main.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["/imports/ui/body.js","/imports/api/items.js","/imports/startup/accounts-config.js","/client/main.js"],"names":["Meteor","module","importSync","v","Template","ReactiveDict","Items","body","onCreated","bodyOnCreated","state","helpers","items","instance","get","find","checked","$ne","sort","createdAt","incompleteCount","count","events","event","preventDefault","target","text","value","insert","Date","owner","userId","username","user","set","export","Mongo","Collection","Accounts","ui","config","passwordSignupFields"],"mappings":"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","file":"/app.js","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Template } from 'meteor/templating';\nimport { ReactiveDict } from 'meteor/reactive-dict';\n\nimport { Items } from '../api/items.js';\n\n//import './item.js';\nimport './body.html';\n\nTemplate.body.onCreated(function bodyOnCreated() {\n  this.state = new ReactiveDict();\n});\n\nTemplate.body.helpers({\n  items() {\n    const instance = Template.instance();\n    if (instance.state.get('hideCompleted')) {\n      // If hide completed is checked, filter items\n      return Items.find({ checked: { $ne: true } }, { sort: { createdAt: -1 } });\n    }\n    // Show newest items at the top\n    return Items.find({}, { sort: { createdAt: -1 } });\n  },\n  incompleteCount() {\n    return Items.find({ checked: { $ne: true } }).count();\n  },\n});\n\nTemplate.body.events({\n  'submit .new-item'(event) {\n    // Prevent default browser form submit\n    event.preventDefault();\n\n    // Get value from form element\n    const target = event.target;\n    const text = target.text.value;\n\n    // Insert an item into the collection\n    Items.insert({\n      text,\n      createdAt: new Date(), // current time\n      owner: Meteor.userId(),\n      username: Meteor.user().username,\n    });\n\n    // Clear form\n    target.text.value = '';\n  },\n  'change .hide-completed input'(event, instance) {\n    instance.state.set('hideCompleted', event.target.checked);\n  },\n});\n","import { Mongo } from 'meteor/mongo';\n\nexport const Items = new Mongo.Collection('items');\n","import { Accounts } from 'meteor/accounts-base';\n\nAccounts.ui.config({\n  passwordSignupFields: 'USERNAME_ONLY',\n});\n","import '../imports/startup/accounts-config.js';\nimport '../imports/ui/body.js';\n"]}}]